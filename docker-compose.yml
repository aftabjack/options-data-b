services:
  redis:
    image: redis:7-alpine
    container_name: bybit-redis
    ports:
      - "${REDIS_PORT:-6380}:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - bybit-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    mem_limit: 512m
    memswap_limit: 512m
    cpus: 0.5
    restart: ${RESTART_POLICY:-unless-stopped}

  tracker:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: bybit-tracker
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - CONFIG_FILE=/app/config.yaml
      - CLEAR_DB_ON_START=${CLEAR_DB_ON_START:-false}
      - BATCH_SIZE=${BATCH_SIZE:-200}
      - BATCH_TIMEOUT=${BATCH_TIMEOUT:-2.0}
      - WS_PING_INTERVAL=${WS_PING_INTERVAL:-45}
      - WS_PING_TIMEOUT=${WS_PING_TIMEOUT:-15}
      - WS_RECONNECT_DELAY=${WS_RECONNECT_DELAY:-10}
      - WS_SUBSCRIPTION_CHUNK_SIZE=${WS_SUBSCRIPTION_CHUNK_SIZE:-100}
      - SYMBOL_CACHE_TTL=${SYMBOL_CACHE_TTL:-86400}
      - HEALTH_CHECK_PORT=${HEALTH_CHECK_PORT:-8080}
      - ENABLE_NOTIFICATIONS=${ENABLE_NOTIFICATIONS:-false}
      - TELEGRAM_API_ID=${TELEGRAM_API_ID:-}
      - TELEGRAM_API_HASH=${TELEGRAM_API_HASH:-}
      - TELEGRAM_NOTIFICATION_CHANNEL=${TELEGRAM_NOTIFICATION_CHANNEL:-}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./config.yaml:/app/config.yaml:ro
      - ./config_loader.py:/app/config_loader.py:ro
      - ./symbols_cache.json:/app/symbols_cache.json
      - ./logs:/app/logs
    ports:
      - "${HEALTH_CHECK_PORT:-8080}:8080"
    restart: ${RESTART_POLICY:-unless-stopped}
    networks:
      - bybit-network
    mem_limit: ${TRACKER_MEMORY_LIMIT:-256m}
    memswap_limit: ${TRACKER_MEMORY_LIMIT:-256m}
    cpus: ${TRACKER_CPU_LIMIT:-1.0}
    labels:
      - "com.bybit.service=tracker"
      - "com.bybit.description=WebSocket data collector"

  webapp:
    build:
      context: .
      dockerfile: Dockerfile.webapp
    container_name: bybit-webapp
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "${WEBAPP_PORT:-5001}:5001"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - CONFIG_FILE=/app/config.yaml
      - WEB_PORT=${WEBAPP_PORT:-5001}
      - AUTO_REFRESH_INTERVAL=${AUTO_REFRESH_INTERVAL:-5000}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./config.yaml:/app/config.yaml:ro
      - ./config_loader.py:/app/config_loader.py:ro
    restart: ${RESTART_POLICY:-unless-stopped}
    networks:
      - bybit-network
    mem_limit: ${WEBAPP_MEMORY_LIMIT:-256m}
    memswap_limit: ${WEBAPP_MEMORY_LIMIT:-256m}
    cpus: ${WEBAPP_CPU_LIMIT:-0.5}
    labels:
      - "com.bybit.service=webapp"
      - "com.bybit.description=Web Dashboard"
      - "com.bybit.url=http://localhost:${WEBAPP_PORT:-5001}"

  dataapi:
    build:
      context: .
      dockerfile: Dockerfile.dataapi
    container_name: bybit-dataapi
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "${API_PORT:-8000}:8000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - CONFIG_FILE=/app/config.yaml
      - DATA_API_PORT=${API_PORT:-8000}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./config.yaml:/app/config.yaml:ro
      - ./config_loader.py:/app/config_loader.py:ro
    restart: ${RESTART_POLICY:-unless-stopped}
    networks:
      - bybit-network
    mem_limit: ${API_MEMORY_LIMIT:-256m}
    memswap_limit: ${API_MEMORY_LIMIT:-256m}
    cpus: ${API_CPU_LIMIT:-0.5}
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 3s
      start_period: 5s
      retries: 3
    labels:
      - "com.bybit.service=dataapi"
      - "com.bybit.description=REST API Server"
      - "com.bybit.url=http://localhost:${API_PORT:-8000}"
      - "com.bybit.docs=http://localhost:${API_PORT:-8000}/docs"

  cron:
    build:
      context: .
      dockerfile: Dockerfile.cron
    container_name: bybit-cron
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - CONFIG_FILE=/app/config.yaml
      - OPTION_ASSETS=${OPTION_ASSETS:-BTC,ETH,SOL}
      - ENABLE_NOTIFICATIONS=${ENABLE_NOTIFICATIONS:-false}
      - TELEGRAM_API_ID=${TELEGRAM_API_ID:-}
      - TELEGRAM_API_HASH=${TELEGRAM_API_HASH:-}
      - TELEGRAM_NOTIFICATION_CHANNEL=${TELEGRAM_NOTIFICATION_CHANNEL:-}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./config.yaml:/app/config.yaml:ro
      - ./config_loader.py:/app/config_loader.py:ro
      - ./logs:/app/logs
      - ./symbols_cache.json:/app/symbols_cache.json
    restart: ${RESTART_POLICY:-unless-stopped}
    networks:
      - bybit-network
    mem_limit: ${CRON_MEMORY_LIMIT:-128m}
    memswap_limit: ${CRON_MEMORY_LIMIT:-128m}
    cpus: ${CRON_CPU_LIMIT:-0.25}
    labels:
      - "com.bybit.service=cron"
      - "com.bybit.description=Scheduled tasks runner"

volumes:
  redis_data:
    driver: local

networks:
  bybit-network:
    driver: bridge
    name: ${DOCKER_NETWORK_NAME:-bybit-network}
    ipam:
      config:
        - subnet: 172.28.0.0/16